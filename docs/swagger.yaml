basePath: /
definitions:
  domain.Expense:
    properties:
      amount:
        type: number
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      user_id:
        type: integer
    type: object
  domain.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  http.ResponseError:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: Simple Expense Tracker
  version: "0.1"
paths:
  /expenses:
    get:
      consumes:
      - application/json
      description: get all expenses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Expense'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: List all expenses
      tags:
      - expenses
    post:
      consumes:
      - application/json
      description: create a new expense
      parameters:
      - description: Expense object
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/domain.Expense'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Expense'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Create a new expense
      tags:
      - expenses
  /expenses/{id}:
    delete:
      consumes:
      - application/json
      description: delete an expense
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Delete an expense
      tags:
      - expenses
    get:
      consumes:
      - application/json
      description: get expense by ID
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Expense'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Get an expense by ID
      tags:
      - expenses
    put:
      consumes:
      - application/json
      description: update an expense
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      - description: Expense object
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/domain.Expense'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Expense'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Update an expense
      tags:
      - expenses
  /users:
    get:
      consumes:
      - application/json
      description: get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: List all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: create a new user
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: delete a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: update a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Update a user
      tags:
      - users
  /users/{user_id}/expenses:
    get:
      consumes:
      - application/json
      description: get expenses by user ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Expense'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ResponseError'
      summary: Get expenses by user ID
      tags:
      - expenses
swagger: "2.0"
